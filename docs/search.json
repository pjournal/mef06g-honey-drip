[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Honey Drip Progress Journal",
    "section": "",
    "text": "Group Members\n\nUgur Ozata\n\nEgemen Atam\nYaser\nBengu\nBayram\n\n\n\nGroup Project Details\nOur group project is [PROJECT NAME]. [SHORT DESCRIPTION]"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "1  Startup Deals",
    "section": "",
    "text": "This report summarizes some of the analyzes startups getting investments from a variety of domestic and international investors. For more information visit KPMG and 212’s Turkish Startup Investment Review 2021 report."
  },
  {
    "objectID": "assignment1.html#data-preparation",
    "href": "assignment1.html#data-preparation",
    "title": "1  Startup Deals",
    "section": "Data Preparation",
    "text": "Data Preparation\n\n# Required libraries\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(ggplot2)\nlibrary(readxl)\n\n\nurl <- \"https://github.com/berkorbay/datasets/raw/master/startup_deals/startup_deals_2021.xlsx\"\ndestfile <- \"sd21.xlsx\"\ncurl::curl_download(url, destfile)\nsd21 <- read_excel(destfile)\nsd21 <- sd21 %>% mutate(`Deal Value (USD)` = as.numeric(`Deal Value (USD)`))\nsd21$`Stake (%)`<- str_remove(sd21$`Stake (%)`, pattern = \"%\")\nsd21 <- sd21 %>% mutate(`Stake (%)` = as.numeric(`Stake (%)`))"
  },
  {
    "objectID": "assignment1.html#key-takeaways",
    "href": "assignment1.html#key-takeaways",
    "title": "1  Startup Deals",
    "section": "Key Takeaways",
    "text": "Key Takeaways\n\nThe e-commerce and delivery sectors received the most investment by far. But we noticed something that most of these investments were made in only 2 companies, Trendyol with 1.435.000.000 and Getir with 1.018.000.000.\nIt is seen that the most investments are made from the USA in terms of total USD value. Count of investors from Turkey is about 90% according to total count.\nTrendyol, Getir, Hepsiburada, Dream Games are the top 4 companies that collect the most investment. (86% of total investment)\nGaming sector is quite popular compared to other sectors according to all investment stages.Although it may not receive the most investment in terms of total value, the sector that receives the most investment in terms of numbers is the gaming sector. The fact that this sector receives the most investment especially in the seed stage may be an indication that this sector will grow in the short-medium term.\n\n\n\nDistribution of investments by sectors\n\nsd21 %>%group_by(`Sector`)%>%\n  summarize(sum =sum(`Deal Value (USD)`)) %>%\n  arrange(desc(sum))\n\n# A tibble: 45 × 2\n   Sector                         sum\n   <chr>                        <dbl>\n 1 Ecommerce enabler       2218940063\n 2 Delivery & Logistics    1027811561\n 3 Media                     21759000\n 4 Energy                    21608314\n 5 Deeptech                  16457491\n 6 Telecom                   12250000\n 7 Agritech                  11618700\n 8 Education                 10933845\n 9 Artificial intelligence    6477366\n10 Marketingtech              5090000\n# … with 35 more rows\n\n\n\n\nGetir is the only company that have Later VC Stage\n\nsd21 %>%filter(`Investment Stage` == \"Later VC Stage\") %>% group_by(`Target Company`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\n\n# A tibble: 1 × 2\n  `Target Company` count\n  <chr>            <int>\n1 Getir                3\n\n\n\n\nTrendyol, Getir, Hepsiburada, Dream Games are the top 4 companies that collect the most investment. (86% of total investment)\n\nsd21 %>% group_by(`Target Company`)%>%\n  summarize(sum=sum(`Deal Value (USD)`,na.rm = TRUE) ) %>%\n  arrange(desc(sum)) %>%\n  top_n(4)\n\n# A tibble: 4 × 2\n  `Target Company`        sum\n  <chr>                 <dbl>\n1 trendyol         1435000000\n2 Getir            1018000000\n3 hepsiburada       761481000\n4 Dream Games       155000050\n\n\n\n\nWhich countries the investors invested from and how much they invested?\n\nsd21 %>%group_by(`Investor's Origin`)%>%\n  summarize(sum =sum(`Deal Value (USD)`),count=n()) %>%\n  arrange(desc(sum))\n\n# A tibble: 38 × 3\n   `Investor's Origin`                 sum count\n   <chr>                             <dbl> <int>\n 1 \"USA, Qatar, UAE, \\r\\nJapan\" 1435000000     1\n 2 \"USA\"                        1076423346    11\n 3 \"USA, UAE\"                    555000000     1\n 4 \"USA, UK\"                     167000000     2\n 5 \"USA, Brazil, Turkey\"         128000000     1\n 6 \"UK\"                           52307000     6\n 7 \"NA\"                           35000000     1\n 8 \"France\"                       32000000     2\n 9 \"Turkey, Belgium, USA\"         20000000     1\n10 \"Finland\"                      10000000     1\n# … with 28 more rows\n\nsd21 %>%group_by(`Investor's Origin`)%>%\n  summarize(sum =sum(`Deal Value (USD)`,na.rm = TRUE),count=n(),average=sum/count) %>%\n  arrange(desc(count))\n\n# A tibble: 38 × 4\n   `Investor's Origin`         sum count   average\n   <chr>                     <dbl> <int>     <dbl>\n 1 Turkey               210986754.   235   897816.\n 2 USA                 1076423346     11 97856668.\n 3 UK                    52307000      6  8717833.\n 4 France                32000000      2 16000000 \n 5 Germany                5100000      2  2550000 \n 6 India                  3050000      2  1525000 \n 7 Netherlands            5800000      2  2900000 \n 8 Qatar, Turkey          1140000      2   570000 \n 9 Turkey, Estonia         830000      2   415000 \n10 Turkey, USA             725000      2   362500 \n# … with 28 more rows\n\n\n\n\nHow many investment received by each sector according to the stages?\n\nSeedStage <- sd21 %>%filter(`Investment Stage` == \"Seed Stage\") %>% group_by(`Sector`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nEarlyVC <- sd21 %>%filter(`Investment Stage` == \"Early VC Stage\") %>% group_by(`Sector`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nLaterVC  <- sd21 %>%filter(`Investment Stage` == \"Later VC Stage\") %>% group_by(`Sector`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nAcquisition <- sd21 %>%filter(`Investment Stage` == \"Acquisition\") %>% group_by(`Sector`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nall <-  sd21 %>% group_by(`Sector`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\n\nallc <- all %>% left_join(SeedStage, by = \"Sector\")  %>% left_join(EarlyVC, by = \"Sector\") %>% left_join(LaterVC, by = \"Sector\") %>% left_join(Acquisition, by = \"Sector\")\ncolnames(allc) <- c(\"Sector\",\"All\",\"Seed\",\"Early\",\"Later\",\"Acquisition\")\nallc\n\n# A tibble: 45 × 6\n   Sector                    All  Seed Early Later Acquisition\n   <chr>                   <int> <int> <int> <int>       <int>\n 1 Gaming                     51    44     2    NA           5\n 2 SaaS                       28    17     1    NA          10\n 3 Fintech                    23    16     3    NA           4\n 4 Marketplace                17    13     1    NA           3\n 5 Healthtech                 14    12     1    NA           1\n 6 Delivery & Logistics       13     8     1     3           1\n 7 Media                      12     9    NA    NA           3\n 8 Artificial intelligence    11    11    NA    NA          NA\n 9 Deeptech                   11    10     1    NA          NA\n10 Foodtech                    9     6     2    NA           1\n# … with 35 more rows\n\n\n\n\nHow many investment is received by each origin according to the stages?\n\nInvestorsOriginSeedStage <- sd21 %>%filter(`Investment Stage` == \"Seed Stage\") %>% group_by(`Investor's Origin`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nInvestorsOriginEarlyVC <- sd21 %>%filter(`Investment Stage` == \"Early VC Stage\") %>% group_by(`Investor's Origin`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nInvestorsOriginLaterVC  <- sd21 %>%filter(`Investment Stage` == \"Later VC Stage\") %>% group_by(`Investor's Origin`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nInvestorsOriginAcquisition <- sd21 %>%filter(`Investment Stage` == \"Acquisition\") %>% group_by(`Investor's Origin`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nInvestorsOriginall <-  sd21 %>% group_by(`Investor's Origin`)%>%\n  summarize(count=n()) %>%\n  arrange(desc(count))\nInvestorsOriginallc <- InvestorsOriginall %>% left_join(InvestorsOriginSeedStage, by = \"Investor's Origin\")  %>% left_join(InvestorsOriginEarlyVC, by = \"Investor's Origin\") %>% left_join(InvestorsOriginLaterVC, by = \"Investor's Origin\") %>% left_join(InvestorsOriginAcquisition, by = \"Investor's Origin\")\ncolnames(InvestorsOriginallc) <- c(\"Investor's Origin\",\"All\",\"Seed\",\"Early\",\"Later\",\"Acquisition\")\nInvestorsOriginallc\n\n# A tibble: 38 × 6\n   `Investor's Origin`   All  Seed Early Later Acquisition\n   <chr>               <int> <int> <int> <int>       <int>\n 1 Turkey                235   198     8    NA          29\n 2 USA                    11     7     1     1           2\n 3 UK                      6     2    NA    NA           4\n 4 France                  2    NA    NA    NA           2\n 5 Germany                 2     1    NA    NA           1\n 6 India                   2    NA     1    NA           1\n 7 Netherlands             2     1    NA    NA           1\n 8 Qatar, Turkey           2     2    NA    NA          NA\n 9 Turkey, Estonia         2     2    NA    NA          NA\n10 Turkey, USA             2     2    NA    NA          NA\n# … with 28 more rows\n\n\n\n\nWhat sector did American investors invest in?\n\nsd21 %>%\n  filter(str_detect(`Investor's Origin`, \"USA\")) %>%\n  group_by(`Sector`) %>% \n  summarise(count = n()) %>%\n  arrange(desc(count))\n\n# A tibble: 14 × 2\n   Sector               count\n   <chr>                <int>\n 1 Gaming                   5\n 2 Delivery & Logistics     3\n 3 Ecommerce enabler        3\n 4 Fintech                  3\n 5 Foodtech                 2\n 6 Agritech                 1\n 7 B lockchain              1\n 8 Deeptech                 1\n 9 Healthtech               1\n10 Marketingtech            1\n11 Marketplace              1\n12 Media                    1\n13 SaaS                     1\n14 Telecom                  1\n\n\n\n\nPercentage of investors during the investment phases\n\nfinancial_investor <- sd21 %>% \n  group_by(`Investment Stage`) %>% \n  transmute(Percent = label_percent()(sum(`Financial Investor` == \"Yes\")/n()))\nunique(financial_investor)\n\n# A tibble: 4 × 2\n# Groups:   Investment Stage [4]\n  `Investment Stage` Percent\n  <chr>              <chr>  \n1 Seed Stage         70%    \n2 Early VC Stage     85%    \n3 Acquisition        40%    \n4 Later VC Stage     100%   \n\nggplot(sd21, aes(`Investment Stage`, fill = `Financial Investor`)) + \n  geom_bar(position = \"fill\") +\n  labs(x=\"İnvestment Stage\", y=NULL) +\n  coord_flip()\n\n\n\nggplot(sd21, aes(`Investment Stage`, fill = `Financial Investor`)) +\n  # Add a bar layer\n  geom_bar(position = \"dodge\")"
  },
  {
    "objectID": "preprocessing.html#necessary-libraries",
    "href": "preprocessing.html#necessary-libraries",
    "title": "2  Preprocessing",
    "section": "2.2 Necessary libraries",
    "text": "2.2 Necessary libraries\n\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(tidyr)\nlibrary(zoo)\nlibrary(janitor)\nlibrary(reactable)\nlibrary(data.table)"
  },
  {
    "objectID": "preprocessing.html#preprocess",
    "href": "preprocessing.html#preprocess",
    "title": "2  Preprocessing",
    "section": "2.3 PREPROCESS",
    "text": "2.3 PREPROCESS\n\n\"First part of cleaning data done in excel then I use Pivot longer Function\"\n\n[1] \"First part of cleaning data done in excel then I use Pivot longer Function\"\n\nConsIndex <- read_excel(\"data/Constructioncost.xls\", \n                             sheet = \"Index\")\nConsIndex <- pivot_longer(ConsIndex,2:13,names_to = \"Month\", values_to = \"index\")\nConsIndex$Month <- match(ConsIndex$Month, month.name)\nhead(ConsIndex) \n\n# A tibble: 6 × 3\n   Year Month index\n  <dbl> <int> <dbl>\n1  2015     1  97.1\n2  2015     2  97.6\n3  2015     3  98.3\n4  2015     4  99.1\n5  2015     5 100. \n6  2015     6 100. \n\n\n\nConsAnnualChange <- read_excel(\"data/Constructioncost.xls\", \n                                    sheet = \"Rate\")\nConsAnnualChange <- pivot_longer(ConsAnnualChange,2:13,names_to = \"Month\", values_to = \"index\")\nConsAnnualChange$Month <- match(ConsAnnualChange$Month, month.name)\nConsAnnualChange$index <- as.numeric(as.character(ConsAnnualChange$index))\n\nWarning: NAs introduced by coercion\n\nhead(ConsAnnualChange)\n\n# A tibble: 6 × 3\n   Year Month index\n  <dbl> <int> <dbl>\n1  2015     1    NA\n2  2015     2    NA\n3  2015     3    NA\n4  2015     4    NA\n5  2015     5    NA\n6  2015     6    NA\n\n\n\n\"House Sales data was too dirty so I clean it up in excel\"\n\n[1] \"House Sales data was too dirty so I clean it up in excel\"\n\nHousesalesYear <- read_excel(\"data/Housesales.xls\", \n                                    sheet = \"Year\")\n\nhead(HousesalesYear) \n\n# A tibble: 6 × 10\n   Year   Total MSUnit MSShare (%…¹ OSUnit OSSha…² FHUnit FHSha…³ SHUnit SHSha…⁴\n  <dbl>   <dbl>  <dbl>        <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n1  2013 1157190 460112         39.8 6.97e5    60.2 529129    45.7 628061    54.3\n2  2014 1165381 389689         33.4 7.76e5    66.6 541554    46.5 623827    53.5\n3  2015 1289320 434388         33.7 8.55e5    66.3 598667    46.4 690653    53.6\n4  2016 1341453 449508         33.5 8.92e5    66.5 631686    47.1 709767    52.9\n5  2017 1409314 473099         33.6 9.36e5    66.4 659698    46.8 749616    53.2\n6  2018 1375398 276820         20.1 1.10e6    79.9 651572    47.4 723826    52.6\n# … with abbreviated variable names ¹​`MSShare (%)`, ²​`OSShare (%)`,\n#   ³​`FHShare (%)`, ⁴​`SHShare (%)`\n\nHousesalesMonth <- read_excel(\"data/Housesales.xls\", \n                                     sheet = \"Month\")\nhead(HousesalesMonth) \n\n# A tibble: 6 × 11\n   Year Month  Total MSUnit MSSha…¹ OSUnit OSSha…² FHUnit FHSha…³ SHUnit SHSha…⁴\n  <dbl> <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n1  2013     1  87444  36581    41.8  50863    58.2  39163    44.8  48281    55.2\n2  2013     2  88519  37150    42.0  51369    58.0  39521    44.6  48998    55.4\n3  2013     3  97956  41809    42.7  56147    57.3  43052    44.0  54904    56.0\n4  2013     4  95381  40812    42.8  54569    57.2  41233    43.2  54148    56.8\n5  2013     5 103261  45270    43.8  57991    56.2  46049    44.6  57212    55.4\n6  2013     6  96424  43763    45.4  52661    54.6  43345    45.0  53079    55.0\n# … with abbreviated variable names ¹​`MSShare (%)`, ²​`OSShare (%)`,\n#   ³​`FHShare (%)`, ⁴​`SHShare (%)`"
  },
  {
    "objectID": "preprocessing.html",
    "href": "preprocessing.html",
    "title": "2  Preprocessing",
    "section": "",
    "text": "2.0.1 Construction Cost Index (2015=100) and Rate of Change\n\n# First part of cleaning data done in excel then I use Pivot longer Function\n\nConsIndex <- read_excel(\"data/Constructioncost.xls\", \n                             sheet = \"Index\")\nConsIndex <- pivot_longer(ConsIndex,2:13,names_to = \"Month\", values_to = \"index\")\nConsIndex$Month <- match(ConsIndex$Month, month.name)\nhead(ConsIndex) \n\n# A tibble: 6 × 3\n   Year Month index\n  <dbl> <int> <dbl>\n1  2015     1  97.1\n2  2015     2  97.6\n3  2015     3  98.3\n4  2015     4  99.1\n5  2015     5 100. \n6  2015     6 100. \n\n\n\nConsAnnualChange <- read_excel(\"data/Constructioncost.xls\", \n                                    sheet = \"Rate\")\nConsAnnualChange <- pivot_longer(ConsAnnualChange,2:13,names_to = \"Month\", values_to = \"index\")\nConsAnnualChange$Month <- match(ConsAnnualChange$Month, month.name)\nConsAnnualChange$index <- as.numeric(as.character(ConsAnnualChange$index))\n\nWarning: NAs introduced by coercion\n\nhead(ConsAnnualChange)\n\n# A tibble: 6 × 3\n   Year Month index\n  <dbl> <int> <dbl>\n1  2015     1    NA\n2  2015     2    NA\n3  2015     3    NA\n4  2015     4    NA\n5  2015     5    NA\n6  2015     6    NA\n\n\n\n\n2.0.2 House Sales by Type and State\n\n# House Sales data was too dirty so I clean it up in excel\nHousesalesYear <- read_excel(\"data/Housesales.xls\", \n                                    sheet = \"Year\")\n\nhead(HousesalesYear) \n\n# A tibble: 6 × 10\n   Year   Total MSUnit MSShare (%…¹ OSUnit OSSha…² FHUnit FHSha…³ SHUnit SHSha…⁴\n  <dbl>   <dbl>  <dbl>        <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n1  2013 1157190 460112         39.8 6.97e5    60.2 529129    45.7 628061    54.3\n2  2014 1165381 389689         33.4 7.76e5    66.6 541554    46.5 623827    53.5\n3  2015 1289320 434388         33.7 8.55e5    66.3 598667    46.4 690653    53.6\n4  2016 1341453 449508         33.5 8.92e5    66.5 631686    47.1 709767    52.9\n5  2017 1409314 473099         33.6 9.36e5    66.4 659698    46.8 749616    53.2\n6  2018 1375398 276820         20.1 1.10e6    79.9 651572    47.4 723826    52.6\n# … with abbreviated variable names ¹​`MSShare (%)`, ²​`OSShare (%)`,\n#   ³​`FHShare (%)`, ⁴​`SHShare (%)`\n\nHousesalesMonth <- read_excel(\"data/Housesales.xls\", \n                                     sheet = \"Month\")\nhead(HousesalesMonth) \n\n# A tibble: 6 × 11\n   Year Month  Total MSUnit MSSha…¹ OSUnit OSSha…² FHUnit FHSha…³ SHUnit SHSha…⁴\n  <dbl> <dbl>  <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n1  2013     1  87444  36581    41.8  50863    58.2  39163    44.8  48281    55.2\n2  2013     2  88519  37150    42.0  51369    58.0  39521    44.6  48998    55.4\n3  2013     3  97956  41809    42.7  56147    57.3  43052    44.0  54904    56.0\n4  2013     4  95381  40812    42.8  54569    57.2  41233    43.2  54148    56.8\n5  2013     5 103261  45270    43.8  57991    56.2  46049    44.6  57212    55.4\n6  2013     6  96424  43763    45.4  52661    54.6  43345    45.0  53079    55.0\n# … with abbreviated variable names ¹​`MSShare (%)`, ²​`OSShare (%)`,\n#   ³​`FHShare (%)`, ⁴​`SHShare (%)`\n\n\n\n\n2.0.3 House Sales by Provinces\n\nPATH <- \"data/House Sales by Provinces.xls\"\n\ndata_xl <- read_excel(PATH, range = cell_rows(14:129), col_names = names(read_excel(PATH, skip = 2))) \n\n\n# Fill NA Values\ndata_xl %>%\n    fill(colnames(data_xl[1]), .direction = \"downup\")\n\n# A tibble: 116 × 84\n   Yıl      …¹ Ay\\nM…² Topla…³ Adana Adıya…⁴ Afyon…⁵  Ağrı Aksaray Amasya Ankara\n         <dbl> <chr>     <dbl> <dbl>   <dbl>   <dbl> <dbl>   <dbl>  <dbl>  <dbl>\n 1        2013 Ocak -…   87444  1548     261     475   105     329    245  11215\n 2        2013 Şubat …   88519  1667     421     506   198     269    290  11281\n 3        2013 Mart -…   97956  1826     310     563    94     301    316  12291\n 4        2013 Nisan …   95381  1875     281     458   164     315    302  11889\n 5        2013 Mayıs …  103261  1941     326     549   141     400    364  12638\n 6        2013 Hazira…   96424  1987     346     454   112     356    356  11692\n 7        2013 Temmuz…  106636  1986     404     563   130     401    463  12428\n 8        2013 Ağusto…   84480  1426     352     472   118     447    330   9636\n 9        2013 Eylül …  102280  1624     422     536   126     519    343  12206\n10        2013 Ekim -…   76344  1232     285     490   103     299    242   8231\n# … with 106 more rows, 74 more variables: Antalya <dbl>, Ardahan <dbl>,\n#   Artvin <dbl>, Aydın <dbl>, Balıkesir <dbl>, Bartın <dbl>, Batman <dbl>,\n#   Bayburt <dbl>, Bilecik <dbl>, Bingöl <dbl>, Bitlis <dbl>, Bolu <dbl>,\n#   Burdur <dbl>, Bursa <dbl>, Çanakkale <dbl>, Çankırı <dbl>, Çorum <dbl>,\n#   Denizli <dbl>, Diyarbakır <dbl>, Düzce <dbl>, Edirne <dbl>, Elazığ <dbl>,\n#   Erzincan <dbl>, Erzurum <dbl>, Eskişehir <dbl>, Gaziantep <dbl>,\n#   Giresun <dbl>, Gümüşhane <dbl>, Hakkari <chr>, Hatay <dbl>, Iğdır <dbl>, …\n\n\n\n# Save data_xl as House Sales by Provinces.rds\nsaveRDS(data_xl, file = \"House Sales by Provinces.rds\")\n\n\n# Restore the House Sales by Provinces.rds\nhead(readRDS(file = \"House Sales by Provinces.rds\"))\n\n# A tibble: 6 × 84\n  Yıl       …¹ Ay\\nM…² Topla…³ Adana Adıya…⁴ Afyon…⁵  Ağrı Aksaray Amasya Ankara\n         <dbl> <chr>     <dbl> <dbl>   <dbl>   <dbl> <dbl>   <dbl>  <dbl>  <dbl>\n1         2013 Ocak -…   87444  1548     261     475   105     329    245  11215\n2           NA Şubat …   88519  1667     421     506   198     269    290  11281\n3           NA Mart -…   97956  1826     310     563    94     301    316  12291\n4           NA Nisan …   95381  1875     281     458   164     315    302  11889\n5           NA Mayıs …  103261  1941     326     549   141     400    364  12638\n6           NA Hazira…   96424  1987     346     454   112     356    356  11692\n# … with 74 more variables: Antalya <dbl>, Ardahan <dbl>, Artvin <dbl>,\n#   Aydın <dbl>, Balıkesir <dbl>, Bartın <dbl>, Batman <dbl>, Bayburt <dbl>,\n#   Bilecik <dbl>, Bingöl <dbl>, Bitlis <dbl>, Bolu <dbl>, Burdur <dbl>,\n#   Bursa <dbl>, Çanakkale <dbl>, Çankırı <dbl>, Çorum <dbl>, Denizli <dbl>,\n#   Diyarbakır <dbl>, Düzce <dbl>, Edirne <dbl>, Elazığ <dbl>, Erzincan <dbl>,\n#   Erzurum <dbl>, Eskişehir <dbl>, Gaziantep <dbl>, Giresun <dbl>,\n#   Gümüşhane <dbl>, Hakkari <chr>, Hatay <dbl>, Iğdır <dbl>, Isparta <dbl>, …\n\n\n\n\n2.0.4 Building Permits and Rates of Change\n\nPATH <- \"data/Building Permits and Rates of Change.xls\"\n\nbuilding_permits <- read_excel(PATH, range = cell_rows(24:105), col_names = names(read_excel(PATH, skip = 2))) \n\nNew names:\n• `Bina sayısı Number of building` -> `Bina sayısı Number of building...3`\n• `Yıllık değişim Annual change (%)` -> `Yıllık değişim Annual change (%)...4`\n• `` -> `...5`\n• `Daire sayısı Number of dwelling unit` -> `Daire sayısı Number of dwelling\n  unit...6`\n• `Yıllık değişim Annual change (%)` -> `Yıllık değişim Annual change (%)...7`\n• `` -> `...8`\n• `Yüzölçüm Floor area (m²)` -> `Yüzölçüm Floor area (m²)...9`\n• `Yıllık değişim Annual change (%)` -> `Yıllık değişim Annual change (%)...10`\n• `` -> `...11`\n• `Bina sayısı Number of building` -> `Bina sayısı Number of building...12`\n• `Yıllık değişim Annual change (%)` -> `Yıllık değişim Annual change (%)...13`\n• `` -> `...14`\n• `Daire sayısı Number of dwelling unit` -> `Daire sayısı Number of dwelling\n  unit...15`\n• `Yıllık değişim Annual change (%)` -> `Yıllık değişim Annual change (%)...16`\n• `` -> `...17`\n• `Yüzölçüm Floor area (m²)` -> `Yüzölçüm Floor area (m²)...18`\n• `Yıllık değişim Annual change (%)` -> `Yıllık değişim Annual change (%)...19`\n\n\n\n# Fill NA Values\nbuilding_permits <- building_permits %>% \n    fill(colnames(building_permits)[1], .direction = \"downup\") %>%\n    select_if(~ !all(is.na(.)))\n\n\n# CP: Construction Permits\n# OP: Occupancy Permits\n\ncolnames(building_permits) <- c('Year',\n                                'Quarter',\n                                'CP - Number of Building',\n                                'CP - NoB - Annual Change (%)',\n                                'CP - Number of Dwelling Unit',\n                                'CP - NoDU - Annual Change (%)',\n                                'CP - Floor Area (m2)',\n                                'CP - Floor Area - Annual Change (%)',\n                                'OP - Number of Building',\n                                'OP - NoB - Annual Change (%)',\n                                'OP - Number of Dwelling Unit',\n                                'OP - NoDU - Annual Change (%)',\n                                'OP - Floor Area (m2)',\n                                'OP - Floor Area - Annual Change (%)')\n\n\n# Save building_permits as Building Permits and Rates of Change.rds\nsaveRDS(building_permits, file = \"Building Permits and Rates of Change.rds\")\n\n\n# Restore the Building Permits and Rates of Change.RData\ntail(readRDS(file = \"Building Permits and Rates of Change.rds\"))\n\n# A tibble: 6 × 14\n   Year Quarter CP - N…¹ CP - …² CP - …³ CP - …⁴ CP - …⁵ CP - …⁶ OP - …⁷ OP - …⁸\n  <dbl> <chr>      <dbl> <chr>     <dbl> <chr>     <dbl> <chr>     <dbl> <chr>  \n1  2021 I          33622 137.30…  174741 116.3    3.44e7 95.099…   20979 12.800…\n2  2021 II         30537 55.5     157526 14.300…  3.18e7 15.699…   18511 27.699…\n3  2021 III        30451 20.199…  149415 5.9000…  3.33e7 19.600…   21954 4      \n4  2021 IV         43699 17.699…  239577 22.399…  5.13e7 29.100…   30738 29.899…\n5  2022 I          26168 -22.19…  128157 -26.69…  2.71e7 -21.19…   22481 7.2000…\n6  2022 II         28249 -7.5     133424 -15.30…  2.93e7 -7.799…   22691 22.600…\n# … with 4 more variables: `OP - Number of Dwelling Unit` <dbl>,\n#   `OP - NoDU - Annual Change (%)` <chr>, `OP - Floor Area (m2)` <dbl>,\n#   `OP - Floor Area - Annual Change (%)` <chr>, and abbreviated variable names\n#   ¹​`CP - Number of Building`, ²​`CP - NoB - Annual Change (%)`,\n#   ³​`CP - Number of Dwelling Unit`, ⁴​`CP - NoDU - Annual Change (%)`,\n#   ⁵​`CP - Floor Area (m2)`, ⁶​`CP - Floor Area - Annual Change (%)`,\n#   ⁷​`OP - Number of Building`, ⁸​`OP - NoB - Annual Change (%)`"
  }
]